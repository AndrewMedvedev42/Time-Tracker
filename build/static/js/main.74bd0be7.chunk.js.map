{"version":3,"sources":["Stopwatch.js","App.js","reportWebVitals.js","index.js"],"names":["Stopwatch","name","child","count","useState","timer","setTimer","isActive","setIsActive","isPaused","setIsPaused","increment","useRef","localStorage","setItem","className","getSeconds","slice","minutes","Math","floor","getMinutes","getHours","formatTime","class","onClick","clearInterval","current","setInterval","disabled","App","React","setName","timerNameList","setTimerNameList","addNewTimer","useCallback","alert","some","timerName","prevList","checkCount","getItem","parseInt","useEffect","i","key","item","console","log","length","size","value","onChange","e","target","map","newTimers","filter","removeItem","deleteTimer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAyEeA,MAjEf,YAA2C,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MAAQ,EAEdC,mBAASD,GAFK,mBAEjCE,EAFiC,KAE1BC,EAF0B,OAGRF,oBAAS,GAHD,mBAGjCG,EAHiC,KAGvBC,EAHuB,OAIRJ,oBAAS,GAJD,mBAIjCK,EAJiC,KAIvBC,EAJuB,KAKlCC,EAAYC,iBAAO,MAwCzB,OAFAC,aAAaC,QAAQb,EAAMI,GAGzB,0BAASU,UAAU,kBAAnB,UACE,oBAAIA,UAAU,aAAd,SAA4Bd,IAC5B,mBAAGc,UAAU,aAAb,SAde,WACjB,IAAMC,EAAa,WAAKX,EAAQ,IAAMY,OAAO,GACvCC,EAAO,UAAMC,KAAKC,MAAMf,EAAQ,KAChCgB,EAAa,WAAIH,EAAU,IAAKD,OAAO,GACvCK,EAAW,WAAIH,KAAKC,MAAMf,EAAQ,OAAQY,OAAO,GAEvD,MAAM,GAAN,OAAUK,EAAV,cAAwBD,EAAxB,cAAwCL,GAQXO,KACzB,0BAASR,UAAU,iBAAnB,UAEKR,GAAaE,EAGVA,EAAW,wBAAQe,MAAM,sBAAsBC,QAvCzC,WAClBC,cAAcf,EAAUgB,SACxBjB,GAAY,IAqCW,SAA0D,cAAC,IAAD,MACnE,wBAAQK,UAAU,qBAAqBU,QAnClC,WACnBf,GAAY,GACZC,EAAUgB,QAAUC,aAAY,WAC9BtB,GAAS,SAACD,GAAD,OAAWA,EAAQ,OAC3B,MA+BW,SAA8D,cAAC,IAAD,MAHlE,wBAAQU,UAAU,qBAAqBU,QA7C/B,WAClBjB,GAAY,GACZE,GAAY,GACZC,EAAUgB,QAAUC,aAAY,WAC9BtB,GAAS,SAACD,GAAD,OAAWA,EAAQ,OAC3B,MAwCO,SAA6D,cAAC,IAAD,MAMjE,wBAAQU,UAAU,sBAAsBU,QA/B5B,WAClBC,cAAcf,EAAUgB,SACxBnB,GAAY,GACZE,GAAY,GACZJ,EAAS,IA2B2DuB,UAAWtB,EAAzE,SAAmF,cAAC,IAAD,MAClFL,S,iBCiBI4B,MA7Ef,WAAgB,IAAD,EAEWC,IAAM3B,SAAS,IAF1B,mBAENH,EAFM,KAEA+B,EAFA,OAM6BD,IAAM3B,SAAS,IAN5C,mBAMN6B,EANM,KAMSC,EANT,KAaPC,EAAcJ,IAAMK,aAAY,WACxB,KAATnC,EACDoC,MAAM,yBACCJ,EAAcK,MAAK,SAACC,GAAD,OAAeA,IAActC,KACvDoC,MAAM,SAAD,OAAUpC,EAAV,sBAELiC,GAAiB,SAACM,GAAD,OAAavC,GAAb,mBAAsBuC,OACvC3B,aAAaC,QAAQb,EAAM,MAE7B,CAACA,EAAMgC,IAyBT,SAASQ,EAAWxC,GAClB,OAAkC,IAA/BY,aAAa6B,QAAQzC,GACf0C,SAAS9B,aAAa6B,QAAQzC,IAE9B,EAIZ,OAxBC2C,qBAAU,WACR,IADa,IAAD,WACJC,GACN,IAAIC,EAAMjC,aAAaiC,IAAID,GAExBZ,EAAcK,MAAK,SAACS,GAAD,OAASA,IAASD,KACtCE,QAAQC,IAAR,UAAeH,EAAf,uBAGAZ,GAAiB,SAACM,GAAD,OAAaM,GAAb,mBAAqBN,QAPlCK,EAAG,EAAGA,EAAEhC,aAAaqC,OAAQL,IAAK,EAAlCA,MAwBR,oCACE,0BAAS9B,UAAU,eAAnB,UACA,mBAAGA,UAAU,SAAb,2FACA,sCAAS,cAAC,IAAD,CAAYoC,KAAM,KAA3B,WACE,qBAAKpC,UAAU,gBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,uBAAOA,UAAU,cAAcqC,MAAOnD,EAAMoD,SAtDrC,SAACC,GAChBtB,EAAQsB,EAAEC,OAAOH,UAsDT,wBAAQrC,UAAU,gBAAgBU,QAASU,EAA3C,SAAwD,cAAC,IAAD,CAAQgB,KAAM,eAI5E,yBAASpC,UAAU,aAAnB,SACE,cAAC,IAAD,UACCkB,EAAcuB,KAAI,SAACT,GAAD,OAAQ,cAAC,EAAD,CAAsB9C,KAAM8C,EAAM5C,MAAOsC,EAAWM,GAAO7C,MAAO,wBAAQa,UAAU,uBAAuBU,QAAS,kBA5CjI,SAACxB,GACnB,IAAIwD,EAAYxB,EAAcyB,QAAO,SAACnB,GAAD,OAAeA,IAActC,KAClEY,aAAa8C,WAAW1D,GACxBiC,EAAiBuB,GAyCuIG,CAAYb,IAAnE,SAA4E,cAAC,IAAD,CAASI,KAAM,QAA7IJ,cChEpCc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.74bd0be7.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useRef } from 'react';\n// import Timer from 'react-compound-timer'\nimport { FaPlay } from 'react-icons/fa';\nimport { FaPause } from 'react-icons/fa';\nimport {FaSquare} from 'react-icons/fa'\n\nfunction Stopwatch ({name, child, count}) {\n\n  const [timer, setTimer] = useState(count)\n  const [isActive, setIsActive] = useState(false)\n  const [isPaused, setIsPaused] = useState(false)\n  const increment = useRef(null)\n\n  const handleStart = () => {\n    setIsActive(true)\n    setIsPaused(true)\n    increment.current = setInterval(() => {\n      setTimer((timer) => timer + 1)\n    }, 1000)\n  }\n\n  const handlePause = () => {\n    clearInterval(increment.current)\n    setIsPaused(false)\n  }\n\n  const handleResume = () => {\n    setIsPaused(true)\n    increment.current = setInterval(() => {\n      setTimer((timer) => timer + 1)\n    }, 1000)\n  }\n\n  const handleReset = () => {\n    clearInterval(increment.current)\n    setIsActive(false)\n    setIsPaused(false)\n    setTimer(0)\n  }\n\n  const formatTime = () => {\n    const getSeconds = `0${(timer % 60)}`.slice(-2)\n    const minutes = `${Math.floor(timer / 60)}`\n    const getMinutes = `0${minutes % 60}`.slice(-2)\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2)\n\n    return `${getHours} : ${getMinutes} : ${getSeconds}`\n  }\n\n  localStorage.setItem(name, timer)\n\n  return (\n    <article className=\"timer-container\">\n      <h2 className=\"timer-name\">{name}</h2>\n      <p className=\"timer-time\">{formatTime()}</p>\n        <section className='button-section'>\n          {\n            !isActive && !isPaused ?\n              <button className=\"button button-play\" onClick={handleStart}><FaPlay/></button>\n              : (\n                isPaused ? <button class=\"button pause-button\" onClick={handlePause}><FaPause/></button> :\n                  <button className=\"button button-play\" onClick={handleResume}><FaPlay/></button>\n              )\n          }\n          <button className=\"button button-reset\" onClick={handleReset} disabled={!isActive}><FaSquare/></button>\n          {child}\n        </section>\n    </article>\n  );\n}\n\nexport default Stopwatch;","import React, { useEffect } from \"react\"\nimport Stopwatch from \"./Stopwatch\"\nimport {FaTimes, FaRegClock, FaPlus } from 'react-icons/fa';\nimport FadeIn from 'react-fade-in';\nimport \"./index.css\"\n\n//Main app\nfunction App() {\n\n  const [name, setName] = React.useState('')\n\n  //creating an array of names that were typed in input field\n\n  const [timerNameList, setTimerNameList] = React.useState([])\n\n  const onChange = (e) =>{\n    setName(e.target.value)\n  }\n\n//function that checks name and sets new name to array\n  const addNewTimer = React.useCallback(() => {\n    if(name === \"\"){\n      alert(\"Input field is empty!\")\n    }else if(timerNameList.some((timerName) => timerName === name)){\n      alert(`Name: ${name} already exists!`)\n    }else{\n      setTimerNameList((prevList)=>[name, ...prevList])\n      localStorage.setItem(name, 0)//sets name to local storage(Date.naw() is here just to set dummy value for key))\n    }\n  },[name, timerNameList])\n\n  //deletes chossed name from array\n  const deleteTimer = (name) =>{\n    let newTimers = timerNameList.filter((timerName) => timerName !== name)\n    localStorage.removeItem(name)//deletes key name from localStorage. Craetion of componets of stored names is in progress\n    setTimerNameList(newTimers)\n  }\n\n  useEffect(()=>{\n    for(let i =0; i<localStorage.length; i++){\n      let key = localStorage.key(i)\n  \n      if(timerNameList.some((item)=> item === key)){\n        console.log(`${key} already deployed!`)\n  \n      }else{\n        setTimerNameList((prevList)=>[key, ...prevList])\n  \n      }}\n  })\n\n//   const setExisting = () => {\n// }\n\n  function checkCount(name){\n    if(localStorage.getItem(name) !== 0){\n      return parseInt(localStorage.getItem(name))\n    }else{\n      return 0\n    }\n  }\n\n return (\n    <section >\n      <section className=\"main-section\">\n      <p className=\"notice\">Type a name of your timer, in the input field and submit it to create a timer</p>\n      <h1>Stop{<FaRegClock size={42}/>}Watch</h1>\n        <div className=\"input-section\">\n          <div className=\"form\">\n            <input className=\"input-field\" value={name} onChange={onChange}/>\n            <button className=\"deploy-button\" onClick={addNewTimer}><FaPlus size={13}/></button>\n          </div>\n        </div>\n      </section>\n      <section className=\"timer-list\">\n        <FadeIn>\n        {timerNameList.map((item)=><Stopwatch key={item} name={item} count={checkCount(item)} child={<button className=\"button button-delete\" onClick={()=>(deleteTimer(item))}>{<FaTimes size={16}/>}</button>}/>)}\n        </FadeIn>\n      </section>\n    </section>\n  );\n}\n//in \"deployedTimers\" div the folleowing code creates component for each name in array of names\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}