{"version":3,"sources":["Stopwatch.js","App.js","reportWebVitals.js","index.js"],"names":["Timerz","name","child","initialTime","startImmediately","start","pause","resume","reset","stop","timerState","className","Days","Hours","Minutes","Seconds","onClick","App","React","useState","setName","timerNameList","setTimerNameList","addNewTimer","useCallback","alert","some","timerName","prevList","value","onChange","e","target","map","item","newTimers","filter","deleteTimer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAkCeA,MA9Bf,YAAiC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MACtB,OAAQ,cAAC,IAAD,CACNC,YAAa,EACbC,kBAAkB,EAFZ,SAIL,gBAAGC,EAAH,EAAGA,MAAeC,GAAlB,EAAUC,OAAV,EAAkBD,OAAaE,GAA/B,EAAyBC,KAAzB,EAA+BD,OAA/B,EAAsCE,WAAtC,OACG,0BAASC,UAAU,aAAnB,UACE,oBAAIA,UAAU,aAAd,mBAA+BV,KAC7B,sBAAKU,UAAU,eAAf,UACI,cAAC,IAAMC,KAAP,IADJ,IAEI,cAAC,IAAMC,MAAP,IAFJ,IAGI,cAAC,IAAMC,QAAP,IAHJ,IAII,cAAC,IAAMC,QAAP,OAIJ,uBACA,sBAAKJ,UAAU,mBAAf,UACI,wBAAQK,QAASX,EAAjB,mBACA,wBAAQW,QAASV,EAAjB,mBAGA,wBAAQU,QAASR,EAAjB,mBACCN,YCoBFe,MA5Cf,WAAgB,IAAD,EAEWC,IAAMC,SAAS,IAF1B,mBAENlB,EAFM,KAEAmB,EAFA,OAI6BF,IAAMC,SAAS,IAJ5C,mBAINE,EAJM,KAISC,EAJT,KAePC,EAAcL,IAAMM,aAAY,WACxB,KAATvB,EACDwB,MAAM,yBAECJ,EAAcK,MAAK,SAACC,GAAD,OAAeA,IAAc1B,KACvDwB,MAAM,SAAD,OAAUxB,EAAV,qBAGLqB,GAAiB,SAACM,GAAD,OAAa3B,GAAb,mBAAsB2B,SAEzC,CAAC3B,EAAMoB,IAET,OACE,oCACE,sBAAKV,UAAU,cAAf,UACA,yCACE,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,aAAakB,MAAO5B,EAAM6B,SArBlC,SAACC,GAChBX,EAAQW,EAAEC,OAAOH,UAqBX,wBAAQlB,UAAU,eAAeK,QAASO,EAA1C,0BAGJ,qBAAKZ,UAAU,iBAAf,SACGU,EAAcY,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAAmBjC,KAAMiC,EAAMhC,MAAO,wBAAQc,QAAS,kBA/BpE,SAACf,GACnB,IAAIkC,EAAYd,EAAce,QAAO,SAACT,GAAD,OAAeA,IAAc1B,KAClEqB,EAAiBa,GA6B0EE,CAAYH,IAAlC,qBAAzBA,YC5BjCI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b9f74ff2.chunk.js","sourcesContent":["import React from \"react\"\nimport Timer from 'react-compound-timer'\n\n\nfunction Timerz ({name, child}) {\n  return (<Timer\n    initialTime={0}\n    startImmediately={false}>\n\n    {({ start, resume, pause, stop, reset, timerState }) => (\n        <section className=\"TimerStyle\">\n          <h3 className=\"timerTitle\">{`${name}`}</h3>\n            <div className=\"timerNumbesr\">\n                <Timer.Days />:\n                <Timer.Hours/>:\n                <Timer.Minutes/>:\n                <Timer.Seconds/>\n                {/* <Timer.Milliseconds /> milliseconds */}\n            </div>\n            {/* <div>{timerState}</div> */}\n            <br />\n            <div className=\"TimerButtonStyle\">\n                <button onClick={start}>Start</button>\n                <button onClick={pause}>Pause</button>\n                {/* <button onClick={resume}>Resume</button> */}\n                {/* <button onClick={stop}>Stop</button> */}\n                <button onClick={reset}>Reset</button>\n                {child}\n            </div>\n        </section>\n    )}\n</Timer>)\n} \n\nexport default Timerz;","import React from \"react\"\nimport Timerz from \"./Stopwatch\"\n\nfunction App() {\n\n  const [name, setName] = React.useState('')\n\n  const [timerNameList, setTimerNameList] = React.useState([])\n\n  const deleteTimer = (name) =>{\n    let newTimers = timerNameList.filter((timerName) => timerName !== name)\n    setTimerNameList(newTimers)\n  }\n\n  const onChange = (e) =>{\n    setName(e.target.value)\n  }\n\n  const addNewTimer = React.useCallback(() => {\n    if(name === \"\"){\n      alert(\"Input field is empty!\")\n\n    }else if(timerNameList.some((timerName) => timerName === name)){\n      alert(`Name: ${name} already exists!`)\n\n    }else{\n      setTimerNameList((prevList)=>[name, ...prevList])\n    }\n  },[name, timerNameList])\n\n  return (\n    <section >\n      <div className=\"mainSection\">\n      <h1>Tracker</h1>\n        <div className=\"inputSection\">\n          <input className=\"inputField\" value={name} onChange={onChange}/>\n          <button className=\"deployButton\" onClick={addNewTimer}>Craete</button>\n        </div>\n      </div>\n      <div className=\"deployedTimers\" >\n        {timerNameList.map((item)=><Timerz key={item} name={item} child={<button onClick={()=>(deleteTimer(item))}>Delete</button>}/>) }\n      </div>\n    </section>\n  );\n}\n\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}