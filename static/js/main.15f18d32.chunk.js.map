{"version":3,"sources":["Stopwatch.js","App.js","reportWebVitals.js","index.js"],"names":["Timerz","name","child","initialTime","startImmediately","start","pause","resume","stop","reset","timerState","className","Days","Hours","Minutes","Seconds","onClick","App","React","useState","setName","timerNameList","setTimerNameList","deleteTimer","newTimers","filter","timerName","localStorage","removeItem","deleteFromLocalStorage","addNewTimer","useCallback","alert","some","prevList","clear","value","onChange","e","target","map","item","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAqCeA,MA9Bf,YAAiC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MACtB,OAAQ,cAAC,IAAD,CACNC,YAAa,EACbC,kBAAkB,EAFZ,SAIL,gBAAGC,EAAH,EAAGA,MAAeC,GAAlB,EAAUC,OAAV,EAAkBD,OAAlB,EAAyBE,KAAzB,EAA+BC,MAA/B,EAAsCC,WAAtC,OACG,0BAASC,UAAU,aAAnB,UACE,oBAAIA,UAAU,aAAd,mBAA+BV,KAC7B,sBAAKU,UAAU,eAAf,UACI,cAAC,IAAMC,KAAP,IADJ,IAEI,cAAC,IAAMC,MAAP,IAFJ,IAGI,cAAC,IAAMC,QAAP,IAHJ,IAII,cAAC,IAAMC,QAAP,OAIJ,uBACA,sBAAKJ,UAAU,mBAAf,UACI,wBAAQK,QAASX,EAAjB,SAAyB,cAAC,IAAD,MACzB,wBAAQW,QAASV,EAAjB,SAAyB,cAAC,IAAD,MAIxBJ,YCuBFe,MAjDf,WAAgB,IAAD,EAEWC,IAAMC,SAAS,IAF1B,mBAENlB,EAFM,KAEAmB,EAFA,OAI6BF,IAAMC,SAAS,IAJ5C,mBAINE,EAJM,KAISC,EAJT,KAUPC,EAAc,SAACtB,GACnB,IAAIuB,EAAYH,EAAcI,QAAO,SAACC,GAAD,OAAeA,IAAczB,MALpE,SAAgCA,GAC9B0B,aAAaC,WAAW3B,GAKxB4B,CAAuB5B,GACvBqB,EAAiBE,IAObM,EAAcZ,IAAMa,aAAY,WACxB,KAAT9B,EACD+B,MAAM,yBACCX,EAAcY,MAAK,SAACP,GAAD,OAAeA,IAAczB,KACvD+B,MAAM,SAAD,OAAU/B,EAAV,qBAELqB,GAAiB,SAACY,GAAD,OAAajC,GAAb,mBAAsBiC,SAEzC,CAACjC,EAAMoB,IAGT,OACE,oCACE,wBAAQL,QAAS,WAAKW,aAAaQ,SAAnC,wBACA,sBAAKxB,UAAU,cAAf,UACA,yCACE,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,aAAayB,MAAOnC,EAAMoC,SArBlC,SAACC,GAChBlB,EAAQkB,EAAEC,OAAOH,UAqBX,wBAAQzB,UAAU,eAAeK,QAASc,EAA1C,0BAGJ,qBAAKnB,UAAU,iBAAf,SACGU,EAAcmB,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAAmBxC,KAAMwC,EAAMvC,MAAO,wBAAQc,QAAS,kBAAKO,EAAYkB,IAAlC,SAA2C,cAAC,IAAD,CAASC,KAAM,QAAnFD,YClCjCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.15f18d32.chunk.js","sourcesContent":["import React from \"react\"\nimport Timer from 'react-compound-timer'\nimport { FaPlay } from 'react-icons/fa';\nimport { FaPause } from 'react-icons/fa';\n\n\n\nfunction Timerz ({name, child}) {\n  return (<Timer\n    initialTime={0}\n    startImmediately={false}>\n\n    {({ start, resume, pause, stop, reset, timerState }) => (\n        <section className=\"TimerStyle\">\n          <h3 className=\"timerTitle\">{`${name}`}</h3>\n            <div className=\"timerNumbesr\">\n                <Timer.Days />:\n                <Timer.Hours/>:\n                <Timer.Minutes/>:\n                <Timer.Seconds/>\n                {/* <Timer.Milliseconds /> milliseconds */}\n            </div>\n            {/* <div>{timerState}</div> */}\n            <br />\n            <div className=\"TimerButtonStyle\">\n                <button onClick={start}>{<FaPlay/>}</button>\n                <button onClick={pause}>{<FaPause/>}</button>\n                {/* <button onClick={resume}>Resume</button> */}\n                {/* <button onClick={stop}>Stop</button> */}\n                {/* <button onClick={reset}>Reset</button> */}\n                {child}\n            </div>\n        </section>\n    )}\n</Timer>)\n} \n\nexport default Timerz;","import React from \"react\"\nimport Timerz from \"./Stopwatch\"\nimport { FaTimes } from 'react-icons/fa';\n\nfunction App() {\n\n  const [name, setName] = React.useState('')\n\n  const [timerNameList, setTimerNameList] = React.useState([])\n\n  function deleteFromLocalStorage(name){\n    localStorage.removeItem(name)\n  }\n\n  const deleteTimer = (name) =>{\n    let newTimers = timerNameList.filter((timerName) => timerName !== name)\n    deleteFromLocalStorage(name)\n    setTimerNameList(newTimers)\n  }\n\n  const onChange = (e) =>{\n    setName(e.target.value)\n  }\n\n  const addNewTimer = React.useCallback(() => {\n    if(name === \"\"){\n      alert(\"Input field is empty!\")\n    }else if(timerNameList.some((timerName) => timerName === name)){\n      alert(`Name: ${name} already exists!`)\n    }else{\n      setTimerNameList((prevList)=>[name, ...prevList])\n    }\n  },[name, timerNameList])\n\n\n  return (\n    <section >\n      <button onClick={()=>{localStorage.clear()}}>Remove all</button>\n      <div className=\"mainSection\">\n      <h1>Tracker</h1>\n        <div className=\"inputSection\">\n          <input className=\"inputField\" value={name} onChange={onChange}/>\n          <button className=\"deployButton\" onClick={addNewTimer}>Craete</button>\n        </div>\n      </div>\n      <div className=\"deployedTimers\" >\n        {timerNameList.map((item)=><Timerz key={item} name={item} child={<button onClick={()=>(deleteTimer(item))}>{<FaTimes size={15}/>}</button>}/>)}\n      </div>\n    </section>\n  );\n}\n\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}